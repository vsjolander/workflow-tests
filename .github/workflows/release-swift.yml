name: Release Swift Package

on:
  workflow_dispatch:

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release Swift
    runs-on: ubuntu-latest
    outputs:
      tokensversion: ${{ steps.output-tokens-version.outputs.tokensversion }}
      tokensshoulddeploy: ${{ contains(fromJson(steps.changesets.outputs.publishedPackages).*.name, '@sebgroup/green-tokens') }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Mock Changeset
        id: changesets
        run: |
          echo "publishedPackages=[{\"name\": \"@sebgroup/green-tokens\", \"version\": \"0.6.0\"}]" >> "$GITHUB_OUTPUT"

      - name: Output green-tokens versions
        if: ${{ contains(fromJson(steps.changesets.outputs.publishedPackages).*.name, '@sebgroup/green-tokens') }}
        id: output-tokens-version
        run: echo "tokensversion=$(jq -r '.[] | select(.name=="@sebgroup/green-tokens").version' <<< '${{ steps.changesets.outputs.publishedPackages }}')" >> "$GITHUB_OUTPUT"

      - name: Mock Artifact
        if: ${{ contains(fromJson(steps.changesets.outputs.publishedPackages).*.name, '@sebgroup/green-tokens') }}
        id: artifact
        run: echo "${{ steps.output-tokens-version.outputs.tokensversion}}" >> iostokens.txt

      - name: Archive production artifacts
        if: ${{ contains(fromJson(steps.changesets.outputs.publishedPackages).*.name, '@sebgroup/green-tokens') }}
        uses: actions/upload-artifact@v4
        with:
          name: iostokens
          path: iostokens.txt

      - name: Debug
        run: |
          echo ${{ contains(fromJson(steps.changesets.outputs.publishedPackages).*.name, '@sebgroup/green-tokens') }}
          echo ${{ fromJson(steps.changesets.outputs.publishedPackages) }}

  deployiostokens:
    name: Deploy Green Tokens iOS
    runs-on: ubuntu-latest
    needs: release
    env:
      CI_COMMIT_MESSAGE: Continuous Integration Deployment ${{ github.sha }}}
      CI_COMMIT_AUTHOR: Continuous Integration
    if: ${{ needs.release.outputs.tokensshoulddeploy == true }}
    steps:
      - name: Debug
        run: echo ${{ needs.release.outputs.tokensshoulddeploy }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Get artifact
        uses: actions/download-artifact@v4
        with:
          name: iostokens

      - name: Push changes
        run: |
          git add .
          git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
          git push
          git tag -a ${{ needs.release.outputs.tokensversion }} -m "Version ${{ needs.release.outputs.tokensversion }} of the Green Tokens Package for Swift."
          git push origin ${{ needs.release.outputs.tokensversion }}
